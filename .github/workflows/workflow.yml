name: push

on: 
  pull_request:
  push:

jobs:
  build:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest   
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Upgrade pip
      run:  python -m pip install --upgrade pip
    - name: Cache poetry install
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-1.4.1-0
    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.4.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v2
      with:
        path: .venv
        key: pydeps-${{ hashFiles('**/poetry.lock') }}
    - name: Install deps
      run: poetry install --no-interaction --no-root
      if: steps.cache-deps.outputs.cache-hit != 'true'
    - name: Download models
      run: poetry run spacy download en_core_web_sm
      if: steps.cache-deps.outputs.cache-hit != 'true'
    - name: Install project
      run: poetry install --no-interaction
    - name: Run pre-commit
      uses: pre-commit/action@v3.0.0
      with:
        extra_args: --all-files
    - name: Run tests
      continue-on-error: true
      run: poetry run pytest --junitxml=pytest.xml
    # - name: Pytest coverage comment
    #   uses: MishaKav/pytest-coverage-comment@main
    #   if: github.event_name == 'pull_request'
    #   with:
    #     pytest-xml-coverage-path: ./covreport.xml
